plugins {
    id "java"
    id "org.springframework.boot" version "3.1.2"
    id "io.spring.dependency-management" version "1.1.5"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "com.diffplug.spotless" version "6.20.0"
}

group = "com.sivalabs"
version = "0.0.1-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
ext {
    set("springdoc_openapi_version", "1.7.0")
    set("commons_lang_version", "3.13.0")
    set("commons_io_version", "2.13.0")
    set("opencsv_version", "5.8")
    set("jjwt_version", "0.11.5")
    set("instancio_version", "3.1.0")
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "io.jsonwebtoken:jjwt-api:${jjwt_version}"
    implementation "io.jsonwebtoken:jjwt-impl:${jjwt_version}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jjwt_version}"

    implementation "org.flywaydb:flyway-core"
    compileOnly "org.projectlombok:lombok"
    testImplementation "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "org.postgresql:postgresql"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"

    implementation "org.springdoc:springdoc-openapi-ui:${springdoc_openapi_version}"
    implementation "com.opencsv:opencsv:${opencsv_version}"
    implementation "org.apache.commons:commons-lang3:${commons_lang_version}"
    implementation "commons-io:commons-io:${commons_io_version}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "io.rest-assured:rest-assured"
    testImplementation "org.instancio:instancio-junit:${instancio_version}"
}

bootBuildImage {
    imageName = "sivaprasadreddy/devzone-api-springboot"
}

gitProperties {
    failOnNoGitDirectory = false
    keys = ["git.branch",
            "git.commit.id.abbrev",
            "git.commit.user.name",
            "git.commit.message.full"
    ]
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        palantirJavaFormat("2.30.0")
        formatAnnotations()
    }
}

tasks.named("test", Test) {
    useJUnitPlatform()
    testLogging {
        events = ["PASSED", "FAILED", "SKIPPED"]
        showStandardStreams = true
        exceptionFormat = "full"
    }
}
